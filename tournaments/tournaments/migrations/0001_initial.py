# Generated by Django 4.2.9 on 2024-02-01 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.SlugField()),
                ('name', models.CharField(blank=True, max_length=100)),
                ('played_by', models.JSONField(blank=True, default=list)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('mode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournaments.mode')),
                ('min_group_size', models.PositiveSmallIntegerField()),
                ('max_group_size', models.PositiveSmallIntegerField()),
                ('with_returns', models.BooleanField(default=False)),
                ('groups_info', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tournaments.mode',),
        ),
        migrations.CreateModel(
            name='Knockout',
            fields=[
                ('mode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournaments.mode')),
                ('double_elimination', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tournaments.mode',),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('definition', models.TextField(blank=True, null=True)),
                ('podium_spec', models.JSONField()),
                ('published', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournaments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mode',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='tournaments.tournament'),
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField()),
                ('position', models.PositiveSmallIntegerField()),
                ('score1', models.PositiveSmallIntegerField(null=True)),
                ('score2', models.PositiveSmallIntegerField(null=True)),
                ('confirmations', models.ManyToManyField(related_name='fixture_confirmations', to=settings.AUTH_USER_MODEL)),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='tournaments.mode')),
                ('player1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fixtures1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fixtures2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_id', models.PositiveIntegerField()),
                ('podium_position', models.PositiveIntegerField(blank=True, null=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='tournaments.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('tournament', 'slot_id'),
                'unique_together': {('tournament', 'podium_position'), ('tournament', 'user'), ('tournament', 'slot_id')},
            },
        ),
        migrations.AddConstraint(
            model_name='fixture',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('score1__isnull', True), ('score2__isnull', True)), models.Q(('score1__isnull', False), ('score2__isnull', False)), _connector='OR'), name='score1 and score2 must be both null or neither'),
        ),
    ]
