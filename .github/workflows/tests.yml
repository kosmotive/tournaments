name: Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:


  run_tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.9"
        - "3.10"

    steps:
    -
      uses: actions/checkout@v4
    -
      name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    -
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
    -
      name: Test with unittest/coverage
      run: |
        cd tournaments
        coverage run --source='.' manage.py test
        python -m coverage json --omit "*/tests.py,*/migrations/*.py,manage.py"
    -
      name: Upload coverage results
      uses: actions/upload-artifact@v4
      if: strategy.job-index == 0
      with:
        name: coverage
        path: tournaments/coverage.json


  update_coverage_badge_data:

    runs-on: ubuntu-latest
    needs: ['run_tests']
    if: github.ref == 'refs/heads/master'
    steps:
    - 
      name: Download coverage results
      uses: actions/download-artifact@v4
      with:
        name: coverage
    -
      name: Install jq
      run: |
        sudo apt install jq
    -
      name: Fetch coverage
      id: coverage
      shell: bash
      run: |
        echo "value=$(jq -r '[.totals.percent_covered_display][0]' coverage.json)" >> $GITHUB_OUTPUT
    -
      name: Create badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: bb85310a74d6b05330d230443007b878
        filename: tournaments.json
        label: Coverage
        message: ${{ steps.coverage.outputs.value }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ steps.coverage.outputs.value }}
